import cx_Oracle
import csv
import os
from pathlib import Path
import requests
from datetime import datetime, timedelta
import threading
import time
import numpy as np
import pandas as pd
import asyncio


oracle_client = "C:\instantclient_19_5"
os.environ["ORACLE_HOME"] = oracle_client
os.environ["PATH"] = oracle_client+os.pathsep+os.environ["PATH"]
os.environ["NLS_LANG"] = "AMERICAN_AMERICA.TH8TISASCII"

time_start = datetime.now()


def printttime(txt):
  dateTimeObj = datetime.now()
  timestampStr = dateTimeObj.strftime("%d-%b-%Y (%H:%M:%S.%f)")
  now = datetime.now()
  duration = now - time_start
  print(timestampStr + ' ' + str(duration.total_seconds()) + ' ' + txt)


class CLS_PPR_CLOSED(threading.Thread):
  def __init__(self):
    threading.Thread.__init__(self)

  def run(self):
    PPR_CLOSED()


def PPR_CLOSED():
  my_dsn = cx_Oracle.makedsn("172.16.6.83", port=1521, sid="NYTG")
  conn = cx_Oracle.connect(user="nygm", password="nygm",
                           dsn=my_dsn, encoding="UTF-8", nencoding="UTF-8")
  cursor = conn.cursor()

  printttime('PPR CLOSED Start')

  cursor.execute("""DELETE FROM CONTROL_WIP_READINESS_BY_SO WHERE 1 = 1 """)

  conn.commit()

  sqlWk = """ SELECT DISTINCT TO_CHAR(DTE,'IYYYIW') PERIOD
          FROM  PS_WW
          WHERE TO_CHAR(DTE,'IYYYIW') >= '202025'
          AND TO_CHAR(DTE,'IYYYIW') <= (SELECT MAX(RDD_W)
          FROM CONTROL_WIP_READINESS_ALL_TMP M)
          ORDER BY 1 """

  dfWK = pd.read_sql_query(sqlWk, conn)
  # print(dfWK)

  for index, row in dfWK.iterrows():
#     sql = """ SELECT M.*, TO_CHAR(GET_FR_MRDDATE_BY_SO(BU, SO_YEAR,SO_NO,SHIPMENT_DATE),'IYYYIW') MRD_W
# ,DECODE(SO_RELEASE,'Y',1,0) + DECODE(SAMPLE_RELEASE,'Y',1,0) + DECODE(FABRIC_COMPLETE,'Y',1,0)
# + DECODE(SEW_ACC_COMPLETE,'Y',1,0)+ DECODE(PACK_ACC_COMPLETE,'Y',1,0)+ DECODE(FC_RELEASE,'Y',1,0)
# + DECODE(PATTERN_RELEASE,'Y',1,0) READINESS_STEP
# FROM (
# SELECT BU, SCM_ALLOCATE, SO_NO, SO_YEAR, SO_NO_DOC
# , MIN(SHIPMENT_DATE) SHIPMENT_DATE
# , MIN(SO_RELEASE) SO_RELEASE, MIN(SO_RELEASE_DATE) SO_RELEASE_DATE
# , MIN(SAMPLE_RELEASE) SAMPLE_RELEASE , MIN(SAMPLE_RELEASE_DATE) SAMPLE_RELEASE_DATE
# , MIN(FABRIC_COMPLETE) FABRIC_COMPLETE , MIN(FABRIC_COMPLETE_DATE) FABRIC_COMPLETE_DATE
# , MIN(SEW_ACC_COMPLETE) SEW_ACC_COMPLETE, MIN(SEW_ACC_COMPLETE_DATE) SEW_ACC_COMPLETE_DATE
# , MIN(PACK_ACC_COMPLETE) PACK_ACC_COMPLETE, MIN(PACK_ACC_COMPLETE_DATE) PACK_ACC_COMPLETE_DATE
# , MIN(FC_RELEASE) FC_RELEASE, MIN(FC_RELEASE_DATE) FC_RELEASE_DATE
# , MIN(PATTERN_RELEASE) PATTERN_RELEASE, MIN(PATTERN_RELEASE_DATE) PATTERN_RELEASE_DATE
#                   FROM OE_SUB_READINESS_STATUS_NYG M
#                   WHERE RDD_W  = '{}'
#                   GROUP BY BU, SCM_ALLOCATE, SO_NO, SO_YEAR, SO_NO_DOC
#                   ) M
#           """.format(row['PERIOD'])
#     df = pd.read_sql_query(sql, conn)
#     print(df)
    cursor.execute("""INSERT INTO CONTROL_WIP_READINESS_BY_SO
    SELECT M.*, TO_CHAR(GET_FR_MRDDATE_BY_SO(BU, SO_YEAR,SO_NO,SHIPMENT_DATE),'IYYYIW') MRD_W
,DECODE(SO_RELEASE,'Y',1,0) + DECODE(SAMPLE_RELEASE,'Y',1,0) + DECODE(FABRIC_COMPLETE,'Y',1,0)
+ DECODE(SEW_ACC_COMPLETE,'Y',1,0)+ DECODE(PACK_ACC_COMPLETE,'Y',1,0)+ DECODE(FC_RELEASE,'Y',1,0)
+ DECODE(PATTERN_RELEASE,'Y',1,0) READINESS_STEP
, TO_CHAR(SHIPMENT_DATE,'IYYYIW'), GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),4) RDD_W_4, GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),5) RDD_W_5
FROM (
SELECT BU, TRIM(SCM_ALLOCATE) SCM_ALLOCATE, SO_NO, SO_YEAR, SO_NO_DOC
, MIN(SHIPMENT_DATE) SHIPMENT_DATE
, MIN(SO_RELEASE) SO_RELEASE, MIN(SO_RELEASE_DATE) SO_RELEASE_DATE
, MIN(SAMPLE_RELEASE) SAMPLE_RELEASE , MIN(SAMPLE_RELEASE_DATE) SAMPLE_RELEASE_DATE
, MIN(FABRIC_COMPLETE) FABRIC_COMPLETE , MIN(FABRIC_COMPLETE_DATE) FABRIC_COMPLETE_DATE
, MIN(SEW_ACC_COMPLETE) SEW_ACC_COMPLETE, MIN(SEW_ACC_COMPLETE_DATE) SEW_ACC_COMPLETE_DATE
, MIN(PACK_ACC_COMPLETE) PACK_ACC_COMPLETE, MIN(PACK_ACC_COMPLETE_DATE) PACK_ACC_COMPLETE_DATE
, MIN(FC_RELEASE) FC_RELEASE, MIN(FC_RELEASE_DATE) FC_RELEASE_DATE
, MIN(PATTERN_RELEASE) PATTERN_RELEASE, MIN(PATTERN_RELEASE_DATE) PATTERN_RELEASE_DATE
                  FROM OE_SUB_READINESS_STATUS_NYG M
                  WHERE 1 = 1
                   GROUP BY BU, TRIM(SCM_ALLOCATE), SO_NO, SO_YEAR, SO_NO_DOC
                   having min(RDD_W) = '{}'
                  ) M """.format(row['PERIOD']))
    conn.commit()

    cursor.execute("""INSERT INTO CONTROL_WIP_READINESS_BY_SO
    SELECT M.*, TO_CHAR(GET_FR_MRDDATE_BY_SO(BU, SO_YEAR,SO_NO,SHIPMENT_DATE),'IYYYIW') MRD_W
,DECODE(SO_RELEASE,'Y',1,0) + DECODE(SAMPLE_RELEASE,'Y',1,0) + DECODE(FABRIC_COMPLETE,'Y',1,0)
+ DECODE(SEW_ACC_COMPLETE,'Y',1,0)+ DECODE(PACK_ACC_COMPLETE,'Y',1,0)+ DECODE(FC_RELEASE,'Y',1,0)
+ DECODE(PATTERN_RELEASE,'Y',1,0) READINESS_STEP
, TO_CHAR(SHIPMENT_DATE,'IYYYIW'), GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),4) RDD_W_4, GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),5) RDD_W_5
FROM (
SELECT BU, TRIM(SCM_ALLOCATE) SCM_ALLOCATE, SO_NO, SO_YEAR, SO_NO_DOC
, MIN(SHIPMENT_DATE) SHIPMENT_DATE
, MIN(SO_RELEASE) SO_RELEASE, MIN(SO_RELEASE_DATE) SO_RELEASE_DATE
, MIN(SAMPLE_RELEASE) SAMPLE_RELEASE , MIN(SAMPLE_RELEASE_DATE) SAMPLE_RELEASE_DATE
, MIN(FABRIC_COMPLETE) FABRIC_COMPLETE , MIN(FABRIC_COMPLETE_DATE) FABRIC_COMPLETE_DATE
, MIN(SEW_ACC_COMPLETE) SEW_ACC_COMPLETE, MIN(SEW_ACC_COMPLETE_DATE) SEW_ACC_COMPLETE_DATE
, MIN(PACK_ACC_COMPLETE) PACK_ACC_COMPLETE, MIN(PACK_ACC_COMPLETE_DATE) PACK_ACC_COMPLETE_DATE
, MIN(FC_RELEASE) FC_RELEASE, MIN(FC_RELEASE_DATE) FC_RELEASE_DATE
, MIN(PATTERN_RELEASE) PATTERN_RELEASE, MIN(PATTERN_RELEASE_DATE) PATTERN_RELEASE_DATE
                  FROM OE_SUB_READINESS_STATUS_GW M
                  WHERE 1 = 1
                   GROUP BY BU, TRIM(SCM_ALLOCATE), SO_NO, SO_YEAR, SO_NO_DOC
                  having min(RDD_W) = '{}'
                  ) M """.format(row['PERIOD']))
    conn.commit()

    cursor.execute("""INSERT INTO CONTROL_WIP_READINESS_BY_SO
    SELECT M.*, TO_CHAR(GET_FR_MRDDATE_BY_SO(BU, SO_YEAR,SO_NO,SHIPMENT_DATE),'IYYYIW') MRD_W
,DECODE(SO_RELEASE,'Y',1,0) + DECODE(SAMPLE_RELEASE,'Y',1,0) + DECODE(FABRIC_COMPLETE,'Y',1,0)
+ DECODE(SEW_ACC_COMPLETE,'Y',1,0)+ DECODE(PACK_ACC_COMPLETE,'Y',1,0)+ DECODE(FC_RELEASE,'Y',1,0)
+ DECODE(PATTERN_RELEASE,'Y',1,0) READINESS_STEP
, TO_CHAR(SHIPMENT_DATE,'IYYYIW'), GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),4) RDD_W_4, GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),5) RDD_W_5
FROM (
SELECT BU, TRIM(SCM_ALLOCATE) SCM_ALLOCATE, SO_NO, SO_YEAR, SO_NO_DOC
, MIN(SHIPMENT_DATE) SHIPMENT_DATE
, MIN(SO_RELEASE) SO_RELEASE, MIN(SO_RELEASE_DATE) SO_RELEASE_DATE
, MIN(SAMPLE_RELEASE) SAMPLE_RELEASE , MIN(SAMPLE_RELEASE_DATE) SAMPLE_RELEASE_DATE
, MIN(FABRIC_COMPLETE) FABRIC_COMPLETE , MIN(FABRIC_COMPLETE_DATE) FABRIC_COMPLETE_DATE
, MIN(SEW_ACC_COMPLETE) SEW_ACC_COMPLETE, MIN(SEW_ACC_COMPLETE_DATE) SEW_ACC_COMPLETE_DATE
, MIN(PACK_ACC_COMPLETE) PACK_ACC_COMPLETE, MIN(PACK_ACC_COMPLETE_DATE) PACK_ACC_COMPLETE_DATE
, MIN(FC_RELEASE) FC_RELEASE, MIN(FC_RELEASE_DATE) FC_RELEASE_DATE
, MIN(PATTERN_RELEASE) PATTERN_RELEASE, MIN(PATTERN_RELEASE_DATE) PATTERN_RELEASE_DATE
                  FROM OE_SUB_READINESS_STATUS_TRM M
                  WHERE 1 = 1
                   GROUP BY BU, TRIM(SCM_ALLOCATE), SO_NO, SO_YEAR, SO_NO_DOC
                    having min(RDD_W) = '{}'
                  ) M """.format(row['PERIOD']))
    conn.commit()

    cursor.execute("""INSERT INTO CONTROL_WIP_READINESS_BY_SO
    SELECT M.*, TO_CHAR(GET_FR_MRDDATE_BY_SO(BU, SO_YEAR,SO_NO,SHIPMENT_DATE),'IYYYIW') MRD_W
,DECODE(SO_RELEASE,'Y',1,0) + DECODE(SAMPLE_RELEASE,'Y',1,0) + DECODE(FABRIC_COMPLETE,'Y',1,0)
+ DECODE(SEW_ACC_COMPLETE,'Y',1,0)+ DECODE(PACK_ACC_COMPLETE,'Y',1,0)+ DECODE(FC_RELEASE,'Y',1,0)
+ DECODE(PATTERN_RELEASE,'Y',1,0) READINESS_STEP
, TO_CHAR(SHIPMENT_DATE,'IYYYIW'), GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),4) RDD_W_4, GET_READINESS_FIND_TARGET( TO_CHAR(SHIPMENT_DATE,'IYYYIW'),5) RDD_W_5
FROM (
SELECT BU, TRIM(SCM_ALLOCATE) SCM_ALLOCATE, SO_NO, SO_YEAR, SO_NO_DOC
, MIN(SHIPMENT_DATE) SHIPMENT_DATE
, MIN(SO_RELEASE) SO_RELEASE, MIN(SO_RELEASE_DATE) SO_RELEASE_DATE
, MIN(SAMPLE_RELEASE) SAMPLE_RELEASE , MIN(SAMPLE_RELEASE_DATE) SAMPLE_RELEASE_DATE
, MIN(FABRIC_COMPLETE) FABRIC_COMPLETE , MIN(FABRIC_COMPLETE_DATE) FABRIC_COMPLETE_DATE
, MIN(SEW_ACC_COMPLETE) SEW_ACC_COMPLETE, MIN(SEW_ACC_COMPLETE_DATE) SEW_ACC_COMPLETE_DATE
, MIN(PACK_ACC_COMPLETE) PACK_ACC_COMPLETE, MIN(PACK_ACC_COMPLETE_DATE) PACK_ACC_COMPLETE_DATE
, MIN(FC_RELEASE) FC_RELEASE, MIN(FC_RELEASE_DATE) FC_RELEASE_DATE
, MIN(PATTERN_RELEASE) PATTERN_RELEASE, MIN(PATTERN_RELEASE_DATE) PATTERN_RELEASE_DATE
                  FROM OE_SUB_READINESS_STATUS_NYV M
                  WHERE 1 = 1
                   GROUP BY BU, TRIM(SCM_ALLOCATE), SO_NO, SO_YEAR, SO_NO_DOC
                    having min(RDD_W) = '{}'
                  ) M """.format(row['PERIOD']))
    conn.commit()


  printttime('PPR CLOSED Complete')


PPR_CLOSED()
